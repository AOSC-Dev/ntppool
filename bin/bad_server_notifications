# -*- cperl -*-
eval 'exec $CBROOT/bin/perl $0 ${1+"$@"}'
  unless $running_under_some_shell;
use strict;
use warnings;
use lib "$ENV{CBROOTLOCAL}/lib";
use lib "$ENV{CBROOT}/lib";
use Combust::Config;
use Combust::Template;

use NTPPool::Admin;
use Email::Send;
use Email::Simple;
use Email::Date;
use Sys::Hostname qw(hostname);

my $config = Combust::Config->new;

my $production = $config->site->{ntppool}->{servername} eq 'www.pool.ntp.org';

NTPPool::DBI->dbh->selectrow_array(q[SELECT GET_LOCK("notifications", 0)]) or exit;

NTPPool::DBI->dbh->do(q[delete from sa using server_alerts sa inner join scores sc using (server) where sc.score > 0]);

my $admins = NTPPool::Admin->search_admins_to_notify;

my $tpl = Combust::Template->new;

my $i = 0;

while (my $admin = $admins->next) {
    my $param = {admin => $admin};
    my @bad_servers = $admin->bad_servers;
    $param->{bad_servers} = \@bad_servers;
    my $txt = $tpl->process('tpl/bad_server_notification.txt', $param, { site => 'ntppool' });
    my $email = Email::Simple->new($txt);
    $email->header_set("Date" => Email::Date::format_date());
    $email->header_set('Message-ID' => '<' . join(".", int(rand(1000)), $$, time) . '@' . hostname . '>');

    if ($production) {
      my $return = send SMTP => $email, 'localhost';
    }
    else {
      print $email->as_string;
    }

    for my $server (@bad_servers) {
        my $alert = $server->alert;
        $alert->mark_sent;
    }

    #last;
    last if ++$i == 3;
}

1;
